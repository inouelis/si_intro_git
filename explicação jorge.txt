GIT
principais características do sistema de versionamento:

- Controle de versões;
- Facilidade em desfazer alguma coisa que você fez sem ter que ficar manipulando arquivo por arquivo
- Comididade de ter várias versões slavas
	- Ramificações (branches) - criar versões a partir de outras, preservando sua origem;
	- Junção (merge) das versões;
Permite trabalho em equipe muito mais transparentes
Rastreabilidade
	- permite identificar pontos de mudança
	- permite identificar os responsaveis pela mudança
Tipos de controle de versionamento: centralizado (antigo não recomendado)
não consegue trabalhar em paralelo os desenvolvedores

Sistema distribuido: como o git funciona: baixa uma cópia exata do repositório, permite que vários desenvolvedores trabalhem em conjunto.
Caracteríticas: operações locais (do local vai para o remoto) e criação de ramificações
- integridade: quando um arquivo é adicionado, todo seu histórico será mantido
- Somente adição:arquivos removidos não são removidos são marcados como excluidos
- Colaboração e autonomia: usuários podem realizar alterações sem depender de arquivos do servidor.
para mostrar a versão como estava antes e acessar a alguma versão em específico  usar o comando:
git checkout numero_Resumo_do_Hash
 acessa ao resumo do hash usando o git log --oneline
para voltar ao main:
git checkout main
Para verificar qual foi a ultima alteração dentro do arquivo usar o:
git diff e pode especificar o nome do arquivo
É possível remover um arquivo do staging area com o:
git restore --staged nome_arquivo

É possível alterar toda a atualização com o:
git restore .
NÃO USAR
git restore --hard (defaz alterações após o ultimo commit ou exclui totalmente o commit)
Usar: git reset HEAD~1 
o número indica quais commits vai excluir o registro do commit mas preserva as modificações, volto para o status de modificado, altera o que precisa e adiciona novamente.